# %%

import numpy as np
from sage.all import *

# %%

# src unk_2018: 0x2018 -> 0x20dc
_src_bytes = [
    0xD4, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0xEB, 0x00, 0x00, 0x00,
    0x22, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x00, 0x00,
    0xF2, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0xD9, 0x00, 0x00, 0x00,
    0x5E, 0x00, 0x00, 0x00, 0xC4, 0x00, 0x00, 0x00, 0xD3, 0x00, 0x00, 0x00,
    0xC5, 0x00, 0x00, 0x00, 0xD6, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00,
    0x49, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00,
    0xE2, 0x00, 0x00, 0x00, 0x8A, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0xD8, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x83, 0x00, 0x00, 0x00,
    0xD9, 0x00, 0x00, 0x00, 0xEA, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
    0x9F, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00, 0xC7, 0x00, 0x00, 0x00,
    0x3B, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0xCF, 0x00, 0x00, 0x00,
    0xF0, 0x00, 0x00, 0x00, 0x5A, 0x00, 0x00, 0x00, 0x99, 0x00, 0x00, 0x00,
    0x34, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x00,
    0x81, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00, 0x3A, 0x00, 0x00, 0x00,
    0x25, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0xCB, 0x00, 0x00, 0x00,
    0x5E, 0x00, 0x00, 0x00, 0x7B, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00,
    0x53, 0x00, 0x00, 0x00
]

# s2 byte_20E0: 0x20e0 -> 0x21a4
_s2_bytes = [
    0xF1, 0x28, 0x01, 0x00, 0xD4, 0x2D, 0x01, 0x00, 0x1F, 0x03, 0x01, 0x00,
    0xF0, 0x47, 0x01, 0x00, 0xD0, 0x24, 0x01, 0x00, 0x2D, 0x05, 0x01, 0x00,
    0x91, 0x9C, 0x00, 0x00, 0x84, 0xAB, 0x01, 0x00, 0xA3, 0x94, 0x01, 0x00,
    0xB5, 0x70, 0x01, 0x00, 0x93, 0xDC, 0x01, 0x00, 0x31, 0x89, 0x01, 0x00,
    0x53, 0x66, 0x01, 0x00, 0x13, 0x07, 0x01, 0x00, 0xAC, 0xFD, 0x00, 0x00,
    0x49, 0xF2, 0x00, 0x00, 0x6F, 0xF4, 0x00, 0x00, 0xFC, 0x11, 0x01, 0x00,
    0x2C, 0x09, 0x01, 0x00, 0x85, 0xE8, 0x00, 0x00, 0x39, 0xCE, 0x00, 0x00,
    0x87, 0x84, 0x01, 0x00, 0x5E, 0x7C, 0x01, 0x00, 0x13, 0x6A, 0x01, 0x00,
    0x80, 0x7F, 0x01, 0x00, 0xF0, 0x68, 0x01, 0x00, 0x66, 0x49, 0x01, 0x00,
    0x78, 0x0A, 0x01, 0x00, 0x51, 0x90, 0x01, 0x00, 0x03, 0x87, 0x01, 0x00,
    0x3A, 0x7E, 0x01, 0x00, 0xDA, 0xAD, 0x01, 0x00, 0xAE, 0x7E, 0x01, 0x00,
    0x10, 0x6B, 0x01, 0x00, 0x4A, 0x1A, 0x01, 0x00, 0x4B, 0xF4, 0x00, 0x00,
    0x53, 0xF6, 0x00, 0x00, 0x48, 0xEE, 0x00, 0x00, 0x81, 0x02, 0x01, 0x00,
    0x46, 0xFA, 0x00, 0x00, 0xA5, 0xE6, 0x00, 0x00, 0x58, 0xB0, 0x00, 0x00,
    0xB2, 0xEF, 0x00, 0x00, 0x47, 0xDF, 0x00, 0x00, 0x6B, 0xD6, 0x00, 0x00,
    0x01, 0x26, 0x01, 0x00, 0xD0, 0xFD, 0x00, 0x00, 0xE9, 0xD6, 0x00, 0x00,
    0xFA, 0xA9, 0x00, 0x00
]

_coef_mask = [
    1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
    0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
]

# %%

_magic = 7
_len = _magic * _magic

## a

_a: np.ndarray
_a = None

_src_int = [
    int.from_bytes(bytes(_src_bytes[i * 4:(i + 1) * 4]), 'little')
    for i in range(_len)
]

for i in range(_magic):
    np_coef_mask = np.array(_coef_mask)
    np_coef_mask = np.roll(np_coef_mask, i)

    np_src_int = np.array(_src_int)
    np_src_int = np.multiply(np_src_int, np_coef_mask)
    np_src_int = np.roll(np_src_int, -1 * i)

    for j in range(_len // _magic):
        np_src_int_roll = np.roll(np_src_int, j)

        __a = np_src_int_roll.copy().reshape(-1, 1)

        if _a is None:
            _a = __a
        else:
            _a = np.hstack((_a, __a))

## y

_s2_int = [
    int.from_bytes(bytes(_s2_bytes[i * 4:(i + 1) * 4]), 'little')
    for i in range(_len)
]

_y = np.array(_s2_int)

print(f"{_a}")
print(f"{_y}")

a = Matrix(ZZ, _a)
y = vector(ZZ, _y)

x = a.solve_right(y)

print(f"{a = }")
print(f"{y = }")
print(f"{x = }")

for _x in x:
    print(chr(_x), end='')
print()

# %%
